Template Method is a behavioral design pattern that lets you define the skeleton of an algorithm 
and allow subclasses to redefine certain steps of the algorithm without changing its structure.

The Template Method pattern suggests to break down an algorithm into a series of steps, 
turn steps into methods and call them one by one inside a single "template" method.

There is another type of steps, called hooks. A hook is an optional step with an empty body. 
Thus, a template method will work even if a hook is not overridden. Usually, 
hooks are placed before and after crucial steps of algorithms, to provide subclasses 
with additional extension points.

Applicability

	When subclasses should be able to extend the base algorithm without altering its structure.
	When you have several classes that do similar things with only minor differences. 
	When you alter one of the classes, you have to change others as well.
	
Identification: Template Method can be recognized by behavioral methods which already have a "default" behavior defined by the base class.